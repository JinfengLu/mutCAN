#!/usr/local/bin/perl -w
# Bookmarks: 0,0 0,0 0,0 0,616 0,0 0,0 0,0 0,0 0,0 0,123; CollapsedSubs: callm  calld  calli
### This program compare array files ./CAN/mutant.can and ./CAN/wt.can (generated by can_generation.pl) to find mutation, deletion, or insertion
### Usage: perl can_comparison.pl type1 setting1 type2 setting2 type3 setting3 "a" Annotation.GFF correction_file(optional)
### "type1/2/3" (number=1~3) can be "m/d/i" (single nucleotide mutation/deletion/insertion)
###
### "a" (="a"), followed by annotation file (./*.GFF), and an optional correction file (./*), is optional
###
### For single nucleotide mutation ("type"="m"), "setting"="mcover mfreq1 mfreq2 wcover wfreq1 wfreq2 judge", it looks for loci:
### (1) in ./CAN/mutant.can covered >= "mcover" times, dominant nt frequency (0~1) >= "mfreq1" and <= "mfreq2"
### (2) in ./CAN/wt.can covered >= "wcover" times, dominant nt frequency (0~1) >= "wfreq1" and <= "wfreq2"
### (3) the two dominant nts are "judge" ("same" or "different")
###
### For deletion ("type"="d"), "setting"="mcover wcover", it looks for loci:
### (1) in ./CAN/mutant.can covered <= "mcover" times
### (2) in ./CAN/wt.can covered >= "wcover" times
###
### For insertion ("type"="i"), "setting"="mbridge wbridge", it looks for loci:
### (1) in ./CAN/mutant.can bridge <= "mbridge" times
### (2) in ./CAN/wt.can bridge >= "wbridge" times
###
### Export loci information in two arraies with coverage, frequency of each nt type, and bridge (see can_generation.pl), for further analysis
### If "a" and annotation file are defined, the exportation will be annotated

sub make_annotation {
### This program rearrange the GFF file $_[0] by genomic position
### If defined correction file $_[1], the chromosome ID will be corrected
### Generates a global hash array %annotation:
### $annotation{chr_position}="mRNAname1 Type1 mRNAname2 Type2 ..."
### Undefined positions are Intergenic region
### mRNAname is GeneName, excluding the .isoform (.fX for TEfragment)
### Type: coding snRNA ncRNA tRNA rRNA miRNA snoRNA pseudogene TEgene TE

    print "Preparing annotation\n";
    my %correct=();
    my $temp="";
    my @tempdata=();
    if ($_[1] ne "none") {
         open (input_cor, "<$_[1]") or die "Couldn't open: $!";
         while (1){
                chomp ($temp=<input_cor>);
                if ($temp ne "") {
                     @tempdata=();
                     @tempdata=split /\s+/, $temp;
                     $correct{$tempdata[0]}=$tempdata[1];
                }
                if (eof) {
                     last;
                }
         }
         close input_cor;
    }

    %annotation=(); ### ID="chromosome_position", value="genename1 Type1 genename2 Type2 ..."
    my $count=0;
    my $i=0;
    my $type="";
    my $name="";
    my $id="";

    open (input_gff, "<$_[0]") or die "Couldn't open: $!";
    while (1){
           chomp ($temp=<input_gff>);
           @tempdata=();
           @tempdata=split /\s+/, $temp;
           if (defined($correct{$tempdata[0]})) {
               $tempdata[0]=$correct{$tempdata[0]};
           }
           if (($tempdata[2] eq "gene") or ($tempdata[2] eq "pseudogene") or ($tempdata[2] eq "transposable_element_gene")) {
               $tempdata[8]=~/ID=/;
               $tempdata[8]=$';
               $tempdata[8]=~/;/;
               $name=$`;
               $tempdata[8]=~/Note=/;
               $tempdata[8]=$';
               $tempdata[8]=~/;/;
               if ($` eq "protein_coding_gene") {
                    $type="coding";
               } elsif ($` eq "other_RNA") {
                    $type="ncRNA";
               } elsif ($` eq "transposable_element_gene") {
                    $type="TEgene";
               } else {
                    $type=$`;
               }
               for ($i=$tempdata[3];$i<=$tempdata[4];$i++) {
                    $id=join "_",($tempdata[0],$i);
                    if (!defined($annotation{$id})) {
                        $annotation{$id}="$name $type";
                    } elsif ($annotation{$id}=~/\Q$name\E \Q$type\E/) {
                        print "Annotation repeated!\n";
                    } else {
                        $annotation{$id}=join " ",($annotation{$id},$name,$type);
                    }
               }
           } elsif ($tempdata[2] eq "transposable_element") {
               $tempdata[8]=~/ID=/;
               $tempdata[8]=$';
               $tempdata[8]=~/;/;
               $name=$`;
               $type="TE";
               for ($i=$tempdata[3];$i<=$tempdata[4];$i++) {
                    $id=join "_",($tempdata[0],$i);
                    if (!defined($annotation{$id})) {
                        $annotation{$id}="$name $type";
                    } elsif ($annotation{$id}=~/\Q$name\E \Q$type\E/) {
                        print "Annotation repeated!\n";
                    } else {
                        $annotation{$id}=join " ",($annotation{$id},$name,$type);
                    }
               }
           }
           $count++;
           if ($count%100000==0) {
               print "$count lines of $_[0] processed\n";
           }
           if (eof) {
               last;
           }
    }
    close input_gff;

}

sub callm {

    print "Searching for PointMutation Candidates\n";
    my $set=$_[0];
    my $ifanno=$_[1];
    my @tempdata=();
    my $coverm=0;
    my $freqml=0;
    my $freqmr=0;
    my $coverwt=0;
    my $freqwtl=0;
    my $freqwtr=0;
    my $judge="";
    my @tempdatam=();
    my @tempdatawt=();
    my $topfreqm=0;
    my $topfreqwt=0;
    my $topntm=0;
    my $topntwt=0;
    my $line=2;
    my $temp="";
    my $pos=0;
    my $i=0;
    use Spreadsheet::WriteExcel;
    my $excel=Spreadsheet::WriteExcel->new("./CAN/PointMutation Candidates $set.xls");
    my $sheet=$excel->add_worksheet();
    my $blank=$excel->add_format();
    $blank->set_color('white');
    open (input_m, "<./CAN/mutant.can") or die "Couldn't open: $!";
    open (input_wt, "<./CAN/wt.can") or die "Couldn't open: $!";
    $sheet->write(0,1,"Mutant pool");
    $sheet->write(0,7,"WT pool");
    $sheet->write(1,0,"pos");
    $sheet->write(1,1,"Coverage");
    $sheet->write(1,2,"A");
    $sheet->write(1,3,"T");
    $sheet->write(1,4,"C");
    $sheet->write(1,5,"G");
    $sheet->write(1,7,"Coverage");
    $sheet->write(1,8,"A");
    $sheet->write(1,9,"T");
    $sheet->write(1,10,"C");
    $sheet->write(1,11,"G");
    if ($ifanno eq "yes") {
         $sheet->write(0,12,"Annotation");
    }

    if ($set ne "default") {
         @tempdata=split /\s+/, $set;
         $coverm=$tempdata[0];
         $freqml=$tempdata[1];
         $freqmr=$tempdata[2];
         $coverwt=$tempdata[3];
         $freqwtl=$tempdata[4];
         $freqwtr=$tempdata[5];
         $judge=$tempdata[6];
    }

    if ((-s "./CAN/mutant.can") and (-s "./CAN/wt.can")) {
          while (1) {
                 $pos++;
                 chomp ($temp=<input_m>);
                 @tempdatam=();
                 @tempdatam=split /\s+/, $temp;
                 chomp ($temp=<input_wt>);
                 @tempdatawt=();
                 @tempdatawt=split /\s+/, $temp;
                 if ($tempdatam[0] ne $tempdatawt[0]) {
                      print "Error at line $pos : Position of mutant.can and wt.can don't match!\n";
                 }

                 if ($set ne "default") {
                      $topfreqm=0;
                      $topntm=0;
                      if ($tempdatam[1]>0) {
                           for ($i=2;$i<=5;$i++) {
                                 if ($tempdatam[$i]/$tempdatam[1]>$topfreqm) {
                                      $topfreqm=$tempdatam[$i]/$tempdatam[1];
                                      $topntm=$i;
                                 }
                           }
                      }

                      $topfreqwt=0;
                      $topntwt=0;
                      if ($tempdatawt[1]>0) {
                           for ($i=2;$i<=5;$i++) {
                                 if ($tempdatawt[$i]/$tempdatawt[1]>$topfreqwt) {
                                      $topfreqwt=$tempdatawt[$i]/$tempdatawt[1];
                                      $topntwt=$i;
                                 }
                           }
                      }

                      if (($tempdatam[1]>=$coverm) and ($topfreqm>=$freqml) and ($topfreqm<=$freqmr) and ($tempdatawt[1]>=$coverwt) and ($topfreqwt>=$freqwtl) and ($topfreqwt<=$freqwtr) and ((($judge eq "same") and ($topntm==$topntwt)) or (($judge eq "different") and ($topntm!=$topntwt)))) {
                           $sheet->write($line,0,$tempdatam[0]);
                           $sheet->write($line,1,$tempdatam[1]);
                           $sheet->write($line,2,$tempdatam[2]);
                           $sheet->write($line,3,$tempdatam[3]);
                           $sheet->write($line,4,$tempdatam[4]);
                           $sheet->write($line,5,$tempdatam[5]);
                           $sheet->write($line,7,$tempdatawt[1]);
                           $sheet->write($line,8,$tempdatawt[2]);
                           $sheet->write($line,9,$tempdatawt[3]);
                           $sheet->write($line,10,$tempdatawt[4]);
                           $sheet->write($line,11,$tempdatawt[5]);
                           if ($ifanno eq "yes") {
                                if (defined($annotation{$tempdatam[0]})) {
                                    $sheet->write($line,12,$annotation{$tempdatam[0]});
                                } else {
                                    $sheet->write($line,12,"Intergenic");
                                }
                           }
                           $line++;
                      }
               }
               if ($line>=60000) {
                      print ("Too many candidates\n");
                      last;
               }
               if ($pos%1000000==0) {
                      print ("$pos loci processed\n");
               }
               if (eof) {
                      last;
               }
         }
    }
    close (input_m);
    close (input_wt);
}

sub calld {

    print "Searching for Deletion Candidates\n";
    my $set=$_[0];
    my $ifanno=$_[1];
    my @tempdata=();
    my $coverm=0;
    my $coverwt=0;
    use Spreadsheet::WriteExcel;
    my @tempdatam=();
    my @tempdatawt=();
    my $temp="";
    my $pos=0;
    my $excel=Spreadsheet::WriteExcel->new("./CAN/Deletion Candidates $set.xls");
    my $sheet=$excel->add_worksheet();
    my $blank=$excel->add_format();
    $blank->set_color('white');
    open (input_m, "<./CAN/mutant.can") or die "Couldn't open: $!";
    open (input_wt, "<./CAN/wt.can") or die "Couldn't open: $!";
    $sheet->write(0,1,"Mutant pool coverage");
    $sheet->write(0,3,"WT pool coverage");
    $sheet->write(0,0,"pos");
    if ($ifanno eq "yes") {
         $sheet->write(0,4,"Annotation");
    }

    my $line=1;
    my $posprev=0;
    my $posnow=0;
    my $tempstart=0;
    my $chrprev="";
    my $chrnow="";
    my $minm=0;
    my $maxm=0;
    my $minw=0;
    my $maxw=0;
    my $tempanno="";
    my $write="";

    if ($set ne "default") {
         @tempdata=split /\s+/, $set;
         $coverm=$tempdata[0];
         $coverwt=$tempdata[1];
    }

    if ((-s "./CAN/mutant.can") and (-s "./CAN/wt.can")) {
         while (1) {
                $pos++;
                chomp ($temp=<input_m>);
                @tempdatam=();
                @tempdatam=split /\s+/, $temp;
                chomp ($temp=<input_wt>);
                @tempdatawt=();
                @tempdatawt=split /\s+/, $temp;
                if ($tempdatam[0] ne $tempdatawt[0]) {
                      print "Error at line $pos : Position of mutant.can and wt.can don't match!\n";
                }

                if ($set ne "default") {
                      if (($tempdatam[1]<=$coverm) and ($tempdatawt[1]>=$coverwt)) {
                           if ($chrprev eq "") {
                                $tempdatam[0]=~/_/;
                                $chrprev=$`;
                                $tempstart=$';
                                $posprev=$';
                                $minm=$tempdatam[1];
                                $maxm=$tempdatam[1];
                                $minw=$tempdatawt[1];
                                $maxw=$tempdatawt[1];
                                if ($ifanno eq "yes") {
                                     if (defined($annotation{$tempdatam[0]})) {
                                         $tempanno=$annotation{$tempdatam[0]};
                                     } else {
                                         $tempanno="Intergenic";
                                     }
                                }
                           } else {
                                $tempdatam[0]=~/_/;
                                $chrnow=$`;
                                $posnow=$';
                                if (($chrnow ne $chrprev) or (($posnow-$posprev)>50)) {
                                     if ($tempstart==$posprev) {
                                          $write=join "",($chrprev,"_",$tempstart);
                                     } else {
                                          $write=join "",($chrprev,"_",$tempstart," to ",$posprev);
                                     }
                                     $sheet->write($line,0,$write);
                                     if ($minm==$maxm) {
                                          $sheet->write($line,1,$minm);
                                     } else {
                                          $write=join "",($minm," to ",$maxm);
                                          $sheet->write($line,1,$write);
                                     }
                                     if ($minw==$maxw) {
                                          $sheet->write($line,3,$minw);
                                     } else {
                                          $write=join "",($minw," to ",$maxw);
                                          $sheet->write($line,3,$write);
                                     }
                                     if ($ifanno eq "yes") {
                                          $sheet->write($line,4,$tempanno);
                                     }
                                     $line++;
                                     $chrprev=$chrnow;
                                     $tempstart=$posnow;
                                     $posprev=$posnow;
                                     $minm=$tempdatam[1];
                                     $maxm=$tempdatam[1];
                                     $minw=$tempdatawt[1];
                                     $maxw=$tempdatawt[1];
                                     if ($ifanno eq "yes") {
                                          if (defined($annotation{$tempdatam[0]})) {
                                              $tempanno=$annotation{$tempdatam[0]};
                                          } else {
                                              $tempanno="Intergenic";
                                          }
                                     }
                                } else {
                                     $posprev=$posnow;
                                     if ($tempdatam[1]<$minm) {
                                          $minm=$tempdatam[1];
                                     }
                                     if ($tempdatam[1]>$maxm) {
                                          $maxm=$tempdatam[1];
                                     }
                                     if ($tempdatawt[1]<$minw) {
                                          $minw=$tempdatawt[1];
                                     }
                                     if ($tempdatawt[1]>$maxw) {
                                          $maxw=$tempdatawt[1];
                                     }
                                     if ($ifanno eq "yes") {
                                          if (defined($annotation{$tempdatam[0]})) {
                                              if (!($tempanno=~/\Q$annotation{$tempdatam[0]}\E/)) {
                                                  $tempanno=join "",($tempanno,", ",$annotation{$tempdatam[0]});
                                              }
                                          } else {
                                              if (!($tempanno=~/Intergenic/)) {
                                                  $tempanno=join "",($tempanno,", Intergenic");
                                              }
                                          }
                                     }
                                }
                           }
                      }
                }
                if ($line>=60000) {
                      print ("Too many candidates\n");
                      last;
                }
                if ($pos%1000000==0) {
                      print ("$pos loci processed\n");
                }
                if (eof) {
                      last;
                }
         }
         if ($chrprev ne "") {
              if ($tempstart==$posprev) {
                   $write=join "",($chrprev,"_",$tempstart);
              } else {
                   $write=join "",($chrprev,"_",$tempstart," to ",$posprev);
              }
              $sheet->write($line,0,$write);
              if ($minm==$maxm) {
                   $sheet->write($line,1,$minm);
              } else {
                   $write=join "",($minm," to ",$maxm);
                   $sheet->write($line,1,$write);
              }
              if ($minw==$maxw) {
                   $sheet->write($line,3,$minw);
              } else {
                   $write=join "",($minw," to ",$maxw);
                   $sheet->write($line,3,$write);
              }
              if ($ifanno eq "yes") {
                   $sheet->write($line,4,$tempanno);
              }
         }
    }
    close (input_m);
    close (input_wt);
}

sub calli {

    print "Searching for Insertion Candidates\n";
    my $set=$_[0];
    my $ifanno=$_[1];
    my @tempdata=();
    my $coverm=0;
    my $coverwt=0;
    use Spreadsheet::WriteExcel;
    my @tempdatam=();
    my @tempdatawt=();
    my $temp="";
    my $pos=0;
    my $excel=Spreadsheet::WriteExcel->new("./CAN/Insertion Candidates $set.xls");
    my $sheet=$excel->add_worksheet();
    my $blank=$excel->add_format();
    $blank->set_color('white');
    open (input_m, "<./CAN/mutant.can") or die "Couldn't open: $!";
    open (input_wt, "<./CAN/wt.can") or die "Couldn't open: $!";
    $sheet->write(0,1,"Mutant pool coverage");
    $sheet->write(0,3,"WT pool coverage");
    $sheet->write(0,0,"pos");
    if ($ifanno eq "yes") {
         $sheet->write(0,4,"Annotation");
    }
    my $line=1;
    my $posprev=0;
    my $posnow=0;
    my $tempstart=0;
    my $chrprev="";
    my $chrnow="";
    my $minm=0;
    my $maxm=0;
    my $minw=0;
    my $maxw=0;
    my $tempanno="";
    my $write="";

    if ($set ne "default") {
         @tempdata=split /\s+/, $set;
         $coverm=$tempdata[0];
         $coverwt=$tempdata[1];
    }

    if ((-s "./CAN/mutant.can") and (-s "./CAN/wt.can")) {
         while (1) {
                $pos++;
                chomp ($temp=<input_m>);
                @tempdatam=();
                @tempdatam=split /\s+/, $temp;
                chomp ($temp=<input_wt>);
                @tempdatawt=();
                @tempdatawt=split /\s+/, $temp;
                if ($tempdatam[0] ne $tempdatawt[0]) {
                      print "Error at line $pos : Position of mutant.can and wt.can don't match!\n";
                }

                if ($set ne "default") {
                      if (($tempdatam[6]<=$coverm) and ($tempdatawt[6]>=$coverwt)) {
                           if ($chrprev eq "") {
                                $tempdatam[0]=~/_/;
                                $chrprev=$`;
                                $tempstart=$';
                                $posprev=$';
                                $minm=$tempdatam[6];
                                $maxm=$tempdatam[6];
                                $minw=$tempdatawt[6];
                                $maxw=$tempdatawt[6];
                                if ($ifanno eq "yes") {
                                     if (defined($annotation{$tempdatam[0]})) {
                                         $tempanno=$annotation{$tempdatam[0]};
                                     } else {
                                         $tempanno="Intergenic";
                                     }
                                }
                           } else {
                                $tempdatam[0]=~/_/;
                                $chrnow=$`;
                                $posnow=$';
                                if (($chrnow ne $chrprev) or (($posnow-$posprev)>50)) {
                                     $write=join "",($chrprev,"_",$tempstart,"-",$posprev+1);
                                     $sheet->write($line,0,$write);
                                     if ($minm==$maxm) {
                                          $sheet->write($line,1,$minm);
                                     } else {
                                          $write=join "",($minm," to ",$maxm);
                                          $sheet->write($line,1,$write);
                                     }
                                     if ($minw==$maxw) {
                                          $sheet->write($line,3,$minw);
                                     } else {
                                          $write=join "",($minw," to ",$maxw);
                                          $sheet->write($line,3,$write);
                                     }
                                     if ($ifanno eq "yes") {
                                          $sheet->write($line,4,$tempanno);
                                     }
                                     $line++;
                                     $chrprev=$chrnow;
                                     $tempstart=$posnow;
                                     $posprev=$posnow;
                                     $minm=$tempdatam[6];
                                     $maxm=$tempdatam[6];
                                     $minw=$tempdatawt[6];
                                     $maxw=$tempdatawt[6];
                                     if ($ifanno eq "yes") {
                                          if (defined($annotation{$tempdatam[0]})) {
                                              $tempanno=$annotation{$tempdatam[0]};
                                          } else {
                                              $tempanno="Intergenic";
                                          }
                                     }
                                } else {
                                     $posprev=$posnow;
                                     if ($tempdatam[6]<$minm) {
                                          $minm=$tempdatam[6];
                                     }
                                     if ($tempdatam[6]>$maxm) {
                                          $maxm=$tempdatam[6];
                                     }
                                     if ($tempdatawt[6]<$minw) {
                                          $minw=$tempdatawt[6];
                                     }
                                     if ($tempdatawt[6]>$maxw) {
                                          $maxw=$tempdatawt[6];
                                     }
                                     if ($ifanno eq "yes") {
                                          if (defined($annotation{$tempdatam[0]})) {
                                              if (!($tempanno=~/\Q$annotation{$tempdatam[0]}\E/)) {
                                                  $tempanno=join "",($tempanno,", ",$annotation{$tempdatam[0]});
                                              }
                                          } else {
                                              if (!($tempanno=~/Intergenic/)) {
                                                  $tempanno=join "",($tempanno,", Intergenic");
                                              }
                                          }
                                     }
                                }
                           }
                      }
                }
                if ($line>=60000) {
                      print ("Too many candidates\n");
                      last;
                }
                if ($pos%1000000==0) {
                      print ("$pos loci processed\n");
                }
                if (eof) {
                      last;
                }
         }
         if ($chrprev ne "") {
                $write=join "",($chrprev,"_",$tempstart,"-",$posprev+1);
                $sheet->write($line,0,$write);
                if ($minm==$maxm) {
                      $sheet->write($line,1,$minm);
                } else {
                      $write=join "",($minm," to ",$maxm);
                      $sheet->write($line,1,$write);
                }
                if ($minw==$maxw) {
                      $sheet->write($line,3,$minw);
                } else {
                      $write=join "",($minw," to ",$maxw);
                      $sheet->write($line,3,$write);
                }
                if ($ifanno eq "yes") {
                      $sheet->write($line,4,$tempanno);
                }
         }
    }
    close (input_m);
    close (input_wt);
}

### main ###
my $mset="";
my $dset="";
my $iset="";
my $anno="";
my $corre="";
my $i=0;
while ($i<=$#ARGV) {
     if ($ARGV[$i] eq "m") {
          if ($i==$#ARGV) {
               $mset="default";
               $i++;
          } elsif (($ARGV[$i+1] eq "d")or($ARGV[$i+1] eq "i")or($ARGV[$i+1] eq "a")) {
               $mset="default";
               $i++;
          } else {
               $mset=join " ",($ARGV[$i+1],$ARGV[$i+2],$ARGV[$i+3],$ARGV[$i+4],$ARGV[$i+5],$ARGV[$i+6],$ARGV[$i+7]);
               $i=$i+8;
          }
     } elsif ($ARGV[$i] eq "d") {
          if ($i==$#ARGV) {
               $dset="default";
               $i++;
          } elsif (($ARGV[$i+1] eq "m")or($ARGV[$i+1] eq "i")or($ARGV[$i+1] eq "a")) {
               $dset="default";
               $i++;
          } else {
               $dset=join " ",($ARGV[$i+1],$ARGV[$i+2]);
               $i=$i+3;
          }
     } elsif ($ARGV[$i] eq "i") {
          if ($i==$#ARGV) {
               $iset="default";
               $i++;
          } elsif (($ARGV[$i+1] eq "m")or($ARGV[$i+1] eq "d")or($ARGV[$i+1] eq "a")) {
               $iset="default";
               $i++;
          } else {
               $iset=join " ",($ARGV[$i+1],$ARGV[$i+2]);
               $i=$i+3;
          }
     } elsif ($ARGV[$i] eq "a") {
          $anno=$ARGV[$i+1];
          $i=$i+2;
          if ($i>$#ARGV) {
               $corre="";
          } elsif (($ARGV[$i] ne "m")and($ARGV[$i] ne "d")and($ARGV[$i] ne "i")) {
               $corre=$ARGV[$i];
               $i++;
          }
     }
}

if ($anno ne "") {
     if ($corre eq "") {
          &make_annotation($anno,"none");
     } else {
          &make_annotation($anno,$corre);
     }
}
if ($mset ne "") {
     if ($anno ne "") {
          &callm($mset,"yes");
     } else {
          &callm($mset,"no");
     }
}
if ($dset ne "") {
     if ($anno ne "") {
          &calld($dset,"yes");
     } else {
          &calld($dset,"no");
     }
}
if ($iset ne "") {
     if ($anno ne "") {
          &calli($iset,"yes");
     } else {
          &calli($iset,"no");
     }
}
############

exit;







